name: Go

on:
  push:
    tags:
    - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags "-s" -o vermin && tar czf vermin-${{ steps.get_version.outputs.VERSION }}.linux.tar.gz vermin && rm -rf vermin
        GOOS=darwin GOARCH=amd64 go build -ldflags "-s" -o vermin && tar czf vermin-${{ steps.get_version.outputs.VERSION }}.macos.tar.gz vermin && rm -rf vermin

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./vermin-${{ steps.get_version.outputs.VERSION }}.linux.tar.gz
        asset_name: vermin-${{ steps.get_version.outputs.VERSION }}.linux.tar.gz
        asset_content_type: application/tar+gzip

    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./vermin-${{ steps.get_version.outputs.VERSION }}.macos.tar.gz
        asset_name: vermin-${{ steps.get_version.outputs.VERSION }}.macos.tar.gz
        asset_content_type: application/tar+gzip
